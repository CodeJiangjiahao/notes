一:	VB数据类型
		声明变量: {Public|Private|Dim|Static} 变量名 As Type [= Expression]
	A: 数值型
		1: Integer	(%)		整型
		2: Long		(&)		长整型
		3: Single	(!)		单精度浮点型
		4: Double	(#)		双精度浮点型
		5: Currency	(@)		货币型
		6: Byte				字节型
		7: Decimal			79228162514264337593543950335到-79228162514264337593543950335
	B: 字符串型
		1: String   ($)		变长字符串		
		2: String*num		定长字符串
	C: 布尔型		Boolean		
	D: 日期型		Date		
	E: 变体数据型	Variant	
	F: 自定义数据类型 (类似结构体)	//字符串必须为定长字符串类型: <StringName> As String * <length>
		[Private|Public] Type <varname> 
			成员变量名 As Type
			...
		End Type
	
二: VB顺序,选择,循环结构
	A: 选择结构	
		a: If 语句
			1: If..Then
					If <exp> Then
						<code>
					End If
			2: If..Then
					If <exp> Then <code>
			3: If..Then..Else
					If <exp> Then
						<code>
					Else
						<code>
					End If
			4: If..Then..ElseIf
					If <exp> Then
						<code>
					ElseIf <exp> Then
						<code>
					...
					End If
		b: Select 语句
				Select Case <exp>
					Case <exp1>
						<code1>
					Case <exp2>
						<code2>
					...
					Case Else
						<codeN>
				End Select
	B: 循环结构
		a: For 循环
				For 循环变量 = 初值 to 终值 [Step 步长]
					<code>
				Next 循环变量 
		b: Do 循环
			1: 无循环条件(直到遇到"Exit Do",或用户按Ctrl+Break组合键)
					Do
						<code>
					Loop
			2: Do While..
					Do While <exp>
						<code>	
					Loop
			3: Do .. While
					Do
						<code>	
					Loop While <exp>
			4: Do Until ..	(False才执行)
					Do Until <exp>
						<code>	
					Loop
			5: Do .. Until 	(False才执行)
					Do
						<code>	
					Loop Until <exp>
		c: While 循环
				While <exp>
					<code>
				Wend
三: 数组
	A: 数组定义
		a: 定长数组
				{Public|Private|Dim} name(index1[,index2 ,...]) As Type
			1: name: 数组名字
			2: index: 下标,数组长度(只能是常数)	  	eg: arr1(3)  长度为3的一维数组; arr2(4,3)  二维数组
			3: Type: 数组元素的数据类型
		b: 动态数组
				{Private|Dim} name() As Type
				ReDim [Preserve] name(index1[,index2 ,...]) 
			1: 使用 ReDim 语句定义数组的大小,该处的index可以是变量
			2: 每次使用 ReDim 都会清空数组数据
			3: 可以在 ReDim 语句后面加 Preserve 参数,用来保留数组中的数据,此时只能改变最后一维的大小
	B: 使用数组
		1: 操作数组中的元素: arr(index)
			eg: arr(1) = 12 : Dim i As Integer = arr(2) :  arr(3) = arr(4)
		2: 操作二维数组中的元素: arr(index1,index2)
			eg: arr(1,2) = 14 : arr(2,3) = arr(1,2)

四: 过程	
	A: 子过程
		a: 子过程的定义
				{Static|Private|Public} Sub name[(参数列表)]
					<code>
				End Sub
			1: name: 子过程名称
		b: 参数列表格式
				[[ByVal] name[()] As Type [,...]]
			1: ByVal: 代表值传递,加上该参数则为值传递
			2: name: 形参变量名
			3: (): 参数是数组时使用
		b: 子过程的调用
			[Call] name[(参数列表)]
	B: 函数过程
		a: 函数过程的定义
				{Static|Private|Public} Function name[(参数列表)] [As Type]
					<code>
				End Sub
			1: name: 函数过程名
			2: Type: 函数返回值类型.若不写,则返回变体类型
		b: 函数过程的调用
			name[(参数列表)]
五: 数据库
	A: 连接数据库
		
		
	B: ADO 控件基本属性
		a: ConnectionString		通过该属性与数据库建立连接
			1: Provide				指定数据源的名称
			2: FileName				指定数据源所对应的文件名
			3: RemoteProvide		在远程数据服务器打开一个客户端时所用的数据源名称
			4: RemoteServer			在远程数据服务器打开一个主机端时所用的数据源名称	
			eg: ado1.ConnectionString = "Provider=MSDASQL.1;Persist Security Info=False;Data Source=ItemBank"
		b: RecordSource			确定访问数据,这些数据构成记录集对象 Recordset
				该属性值可以是单个表名, 一个存储查询, 也可以是使用SQL查询语句的一个查询字符串
			eg: ado1.RecordSource = "select * from user"
		c: ConnectionTimeout	数据连接超时时间
		d: MaxRecords			指定一个查询中最多返回的记录数
	C: ADO 控件事件
		a: Reposition			当一条记录成为当前记录后触发
		b: Validate				当要移动指针,修改与删除记录前或卸载含有数据控件的窗体时触发
			Save 参数: 是否有数据发生变化
			Action 参数: 哪一种操作触发了 Validate 事件
				取值: 0 : 取消对数据控件的操作; 1 : MoveFirst; 2 : MovePrevious; 3 : MoveNext; 4 : MoveLast; 
					  5 : AddNew; 6 : Update; 7 : Delete; 8 : Find; 12 : 设置 Bookmark; 10 : Close; 11 : 卸载窗体 	   
	D: ADO 控件方法
		a: Refresh					
		b: UpdateControls
		c: UpdateRecord
	E: Recordset 记录集
		a: 属性
			1: AbsolutePostition 	指针位置(从0开始)
			2: BOF,EOF				指针是否在记录集 首记录之前/末记录之后
			3: BookMark				当前指针
			4: RecordCount			记录集的记录数(只读,为了获得准确值,可先使用 MoveLast 方法)
			5: Index				索引(需 ADO 数据源的 RecordSource 为数据表)
		b: 方法
			1: Move 方法
				MoveFirst       	指针移至第1条记录
				MoveLast       		指针移至最后1条记录
				MoveNext       		指针移至下1条记录
				MovePrevious      	指针移至上1条记录
				Move [n]			向前或向后移 n 条记录
			2: Find 方法
				FindXxx	<条件>	(找到匹配的记录时: 记录定位到该记录, Recordset 的 NoMatch=False; 未找到时: 记录位置不变,NoMatch=True )
					eg: ado1.Recordset.FindFiest 专业 Like "*建*"
			3: Seek 方法
				数据表对象.Seek <比较运算符(字符串引起)>,<Key1>,...		(需要通过Index属性设置索引)
					eg: ado1.Recordset.Seek ">=","110001"
		c: 其他
			Recordset("字段名称")			对应字段名称的数据 
			Recordset(i).Name           	第 i 个字段的名称
			Recordset(i)              		第 i 个字段数据 
			Recordset.Fields.Count      	记录的字段数 
			Recordset.Fields(i).DefinedSize 	第 i 个字段数据域位长度	
			Recordset.Fields(i).Type        第 i 个字段数据类型			
			Recordset.PageSize             	设定每页显示的资料笔数 
			Recordset.PageCount             分页后的总页数 
			Recordset.AbsolutePage          目前所在的页数
			//方法
			Recordset.AddNew             	新增数据至数据表中 
			Recordset.Edit					编辑当前记录
			Recordset.Update             	更新目前这笔资料 
			Recordset.Delete             	删除目前这笔资料  
			Recordset.GetRows             	将数据集中的数据储存至数组中 
			Recordset.Sort             		将数据集中的数据排序

六: 文件
	A: 顺序文件
		//打开顺序文件
		a: Open <fileName> For <model> As [#]<fileNumber>
			1: fileName: 文件名,包含完整路径
			2: model: 模式,取值: Output: > (先清除文件内容); Input: < ; Append: >>
			3: fileNumber: 指定的文件号,1~511	//避免文件号重复, 可以使用 FreeFile() 函数获取文件号
				FreeFile([{0|1}]): 取0: 获取 1~255 间未使用的文件号; 取1: 256~511 //不加参数默认取0
					eg: Open "C:\xxx\txt" For Output As #1
					eg: FileNo = FreeFile() : Open "C:\xxx\txt" For Output As FileNo	
		//写顺序文件(Output/Append)
		b: Write #<fileNumber> , [输出列表]
			1: 输出列表: [{Spc(n)|Tab(n)}][数值或字符串表达式][;|,]
			2: Write 输出的数据会以紧凑格式存放,数据线之间以符号','分隔,并给字符串加上双引号
				eg: Write #1, "学号","高数","英语","VB"
		c: Print #<fileNumber> , [输出列表]
			1: 输出列表: [{Spc(n)|Tab(n)}][数值或字符串表达式][;|,]
		//读顺序文件
		d: Input #<fileNumber>, 变量列表
			1: 读出数据并将数据赋值为变量列表中的变量
		e: Line Input #<fileNumber>, 字符串变量
			1: 读取一行数据(不包含回车换行符)
		f: Input(每次读的字符个数n, [#]<fileNumber>)
			1: 读取指定字符个数
		g: EOF(<fileNumber>)
			1: 返回文件指针是否到达文件末尾(Boolean)
		h: LOF(<fileNumber>)
			1: 返回文件的字节数
		//关闭顺序文件
		i: Close([[#]<fileNumber>, ...])   /   Close #<fileNumber>
			1: Close(): 不加参数,关闭所有打开的文件
			2: Close(1): 关闭1号文件
			3: Close #1: 关闭1号文件
	B: 随机文件
		//打开随机文件
		a: Open <fileName> For Random As #<fileNumber> [Len=记录长度]
			1: 记录长度: 用于指定随机文件中每条记录的长度,默认值为 128字节
			2: 随机文件打开后可以同时进行读写操作
		//随机文件的读写
		b: Put [#]<fileNumber>, [记录号,] 变量名
			1: 将一个记录变量的内容,写入所打开的文件的记录位置.如果省略记录号,则在当前记录后写入一条记录
		c: Get [#]<fileNumber>, [记录号,] 变量名
			1: 将指定记录位置的记录内容读入到记录变量中.如果省略记录号,则读出当前记录后的一条记录
	C: 二进制文件
		//打开二进制文件
		a: Open <fileName> For Binary As #<fileNumber>
		//二进制文件的读写
		b: Put / Get
	D: 文件操作语句和函数
		//操作未打开的文件
		a: FileCopy <fileName>,<newFile>
			1: 复制文件(不能 复制 已经打开的文件)
		b: Kill <fileName>
			1: 删除文件(支持'*'和'?'通配符)(不能 删除 已经打开的文件)
		c: Name <fileName> As <newName>
			1: 重命名/移动 文件或目录(不支持通配符)(不能 重命名/移动 已经打开的文件)
		//操作已打开的文件
		d: Seek [#]<fileNumber>, 位置
			1: 设置下一个读/写操作的位置(对于随机文件,就是记录号)
		e: Seek(<fileNumber>)
			1: 返回当前的读/写位置(Long)
		f: Loc(# [<fileNumber>])
			1: 返回当前字节位置(顺序文件); 返回上一次读/写的记录号(随机文件); 返回上次读/写的字节位置(二进制文件)
		g: FileLen([<fileName>])
			1: 返回文件的大小(如果文件已打开,则返回打开前的大小)(Long)
		
七: VB 控件
	-------------- VB6.0 --------------
	A: 主要属性
		//通用
		a: Name				程序中对象的名称
		b: Caption			显示的名称(窗体的标题,标签的文本等)
		c: Height,Width		高,宽(包括标题栏,边框线的宽高)(单位: Twip)
		d: ScaleHeight		高,实际可用高度
		   ScaleWidth		宽,实际可用宽度
		e: BackColor		背景色
		   ForeColor		前景色
		f: Enabled			用户是否可用(True: 可用;False: 禁用)  /* 窗体,所有控件 */
		g: Font				字体  /* 窗体,大部分控件 */
				FontBold: 粗体(Boolean)  		 FontUnderline: 下划线(Boolean)
				FontItalic: 斜体(Boolean) 	 	 FontName: 字体名称  
				FontStrikethru: 删除线(Boolean)  FontSize: 字体大小 
		h: Picture 			显示的图片   /* 窗体,按钮,图像框,图片框 */
		i: Top,Left			到顶,左的距离  /* 窗体,大部分控件 */
		j: Visible			是否可见 (Boolean) /* 窗体,所有控件 */	
		//窗体
		k: WindowState		显示状态 (取值: 0 : Normal,正常状态; 1 : Minimized,最小化状态; 2 : Maximized,最大化状态)
		l: ScaleMode		坐标度量单位  (取值: 0 : VbUser,用户定义; 1 : VbTwips,默认; 2 : VbPoints,磅; 3 : VbPixels,像素; 
												 4 : VbCharacters,字符; 5 : VbInches,英寸; 6 : VbMillimeters,毫米; 7 : VbCentimeters,厘米)
		  
		/* 绘图常用 -> 窗体,图像框,打印机 */
		m: CurrentX			对象在绘图时的X坐标  
		   CurrentY			对象在绘图时的Y坐标
		n: DrawWidth		线宽(单位: 像素,最小1)	
		o: DrawStyle		线的形状   //当 DrawWidth > 1时,只有(0 : 实线)生效
								(取值: 0 : 实线(默认); 1 : 长划线; 2 : 点线; 3 : 点划线; 4 : 双点划线; 5 : 透明线; 6 : 内实线)
		p: FillStyle		填充的图案 (取值: 0 ~ 7 )
		q: FillColor		填充图案的颜色
		r: AutoRedarw		自动重画 (boolean)
		
		/* 窗体方法 */
		s: Print [内容]				打印内容并换行			
		t: Cls						清除 Print 的痕迹
		u: Move	 left[,top[,width[,height]]]	移动窗体,或控件;或改变对象的大小
		v: Load  窗体名称			加载指定窗体
		w: UnLoad  窗体名称			卸载指定窗体
		x: [窗体名称].Show [模式]	指定窗体状态
						模式: 0 : (默认)Modeless,非模型式,可对其他窗体进行操作; 1 : Model,模型式,只有关闭该窗体后才能操作其他窗体
		y: [窗体名称].Hide			隐藏窗体	
		
	B: 控件
		a: PictureBox		//图像框  //命名: picName
			1: Picture			显示的图片的路径
			2: AutoSize			是否自适应图片尺寸
		b: Label			//标签  //命名: lblName
			1: Alignment		对齐方式 (取值: 0 : LeftJustify,左对齐; 1 : RightJustify,右对齐; 2 : Center,居中)
			2: AutoSize			是否自动调整 (Boolean)
			3: BackStyle		背景样式 (取值: 0 : Transparent,透明显示; 1 : Qpaque,不透明)
			4: BorderStyle		边框样式 (取值: 0 : None,无边框; 1 : FixedSingle,单线边框)	
		c: TextBox			//文本框,输入框  //命名: txtName
			1: Text				文本框内容(String)
					//特殊
					vbCrLf: 换行  eg: txt1.Text = txt1.Text & vbCrLf
			2: Locked			是否可编辑文本(默认: False)
			3: MaxLength		文本最大长度(默认: 0)
			4: Multiline		是否多行方式显示(默认: False)
			5: ScrollBars		滚动条样式 (取值: 0 : None,无滚动条; 1 : Horizontal,水平; 2 : Vertical,垂直; 3 : Both,水平+垂直)
									//多行显示时,才能看到垂直滚动条
			6: SelText			选择的正文内容 //设置 SelStart,SelLength 后,会自动填充正文
			   SelStart			选择的正文开始位置(从0开始)
			   SelLength		选择的正文的长度
		d: Frame			//框架,组(该组件内的东西不受对外界干扰)
		e: CommandButton	//按钮  //命名: cmdName
			1: Style			按钮样式 (取值: 0 : Standard,标准(不能显示图片); 1 : Graphical,图形(可显示图片))	
		f: CheckBox			//复选框  //命名: chkName
			1: Value			复选框的状态 (取值: 0 : vbUnchecked,未被选定; 1 : vbChecked,被选定; 2 : vbGrayed,部分选定)
		g: OptionButton		//单选按钮
			1: Value			单选按钮的状态 (取值: True: 被选定; Flase: 未被选定)
		h: ListBox			//选择项列表,列表框
			1: List				列表项目值 (char[])
			2: ListIndex		被选定的项目的索引(未被选择为 -1)
			3: ListCount		项目总数
			4: Sorted			是否对项目进行排序 (boolean)
			5: Text				被选定的项目的文本内容
			6: Selected			某项的是否被选中 (boolean)
			7: MultiSelect		是否允许多选 (取值: 0 : 不能多选(默认); 1 : 可用鼠标空格键简单多选; 2 : 可用 Shift + Ctrl 选定多个连续项)
			//方法
			1: AddItem  项目字符串[,index]	 	在[末尾添加][索引index处插入]指定内容的项目
			2: RemoveItem  index				删除索引为index的项目
			3: Clear							清空所有项目
		i: ComboBox			//下拉列表  //命名: cboName
			1: List,ListIndex,ListCount,Sorted,Text //参考列表框(Selected,MultiSelect不可用)
			2: Style			组合框样式 (取值: 0 : 下拉式组合框; 1 : 简单组合框; 2 : 下拉式列表框)
			//方法
			1: AddItem,RemoveItem,Clear
		j: HScrollBar,VScrollBar //左右滚动条,上下滚动条
			1: Value			滑块当前位置的值
			2: Min,Max			滑块最小值,最大值
			3: SmallChange		单击滚动条两端箭头时,Value改变值
			4: LargeChange		单击滚动条空白区域时,Value改变值
		k: Timer			//定时器
			1: Interval 		设置两个Timer事件的事件间隔(0~64767 ms)//默认 0,此时不产生Timer事件
		m: CommonDialog		//通用对话框  //命名: dlgName
			1: Action			通用对话框的类型 
				取值: 1 : 打开(Open)对话框; 2 : 另存为(Save As)对话框; 3 : 颜色(Color)对话框
					  4 : 字体(Font)对话框; 5 : 打印(Print)对话框; 6 : 帮助(Help)对话框
			2: FileName			文件名称(包含路径)
			3: FileTitle		文件标题(不包含路径)
			4: InitDir			初始化路径
			5: Filter			过滤器,过滤文件类型(由一组元素或用'|'符号分别表示不同类型的多组元素组成)
			6: FilterIndex		过滤器索引
			7: DefaultExt		默认扩展名
			8: Color 			选定的颜色
		l: DriverListBox	//驱动器列表
			1: Drive 			哪个磁盘(eg: "c:\\", "D:\\")
		n: DirListBox		//目录列表框
			1: Path				路径 
		o: FileListBox		//文件列表框
			1: Path				路径
			2: Pattern			文件过滤器(eg: "*.txt")
			3: FileName			选中的文件的名称
				选中的文件的路径: Path & "\" & FileName
		p: Image			//图片框  //命名: imgName
			1: Picture
			2: Stretch			伸展图片(True: 图片伸缩适应图片框大小 ; False: 图片框不变,图片被裁剪或位于左上角)
		q: Shape			//图形
			1: BackColor,BackStyle
			2: BorderColor,BorderStyle
			3: FillColor,FillStyle
			4: Shape			图形的几何特性(取值: 0 : 矩形(默认); 1 : 正方形; 2 : 椭圆形; 3 : 圆形; 4 : 圆角矩形; 5 : 圆角正方形)
		r: Line				//直线
			1: BorderColor		直线的颜色
			2: BorderStyle		直线的样式 (取值: 0 : 透明; 1 : 实线(默认); 2 : 虚线; 3 : 点线; 4 : 点划线; 5 : 双点划线; 6 : 内实线)
			3: BorderWidth		直线的宽度
			4: X1,Y1,X2,Y2		起点的坐标,终点的坐标
		s: Data				//数据控制
		t: OLE				//对象链接与嵌入
				
	C: 常用事件
		a: Timer			在计时器控件中,用Interval属性所预定的时间间隔过去后发生
		//窗体事件
		b: Activate 		激活,窗体变为活动窗体时发生此事件
		c: Deactivate		当对象不在是活动窗口时发生
		d: Load				当窗体被装载时发生
		e: QueryUnload		在某个窗体被关闭或应用程序结束前发生
		f: Unload			当窗体从屏幕上删除时发生
		//鼠标事件
		g: Click			单击事件
		h: Dblclick			双击事件
		i: MouseDown		按下鼠标键
		j: MouseMove		鼠标移动
		k: MouseUp			释放鼠标键
		l: Scroll			当用户用鼠标在滚动框内推动滚动条时发生
		//键盘事件
		m: KeyDown			当对象具有焦点时按下键盘上某个键时发生
		n: KeyPress			当对象具有焦点时按下并释放一个键时发生
		o: KeyUp			当对象具有焦点时释放键盘上某个键时发生
		//发生改变事件
		p: Change			当控件内容发生改变时发生
		q: PathChange		当用户指定新的FileName属性或Path属性,从而改变了路径时发生
		r: PatternChange	当用户指定新的FileName属性或Path属性,从而改变了当前文件列表类型时发生
		//布局事件
		s: Resize			当对象第一次显示或窗口的尺寸发生变化时发生
		//焦点事件
		t: GotFocus			当对象获得焦点时发生
		u: LostFocus		当对象失去焦点时发生
		//拖放事件
		v: DragDrop			当用户在窗体上用鼠标拖动一个控件然后放开时发生
		w: DragOver			当对象被拖动并越过另一个控件时发生
		x: DragDown			ComboBox控件的列表部分正要被放下时发生(Style属性为1时,不发生)
		//外观事件
		y: Paint			当窗口内容被重绘时发生
	-------------- VB6.0 --------------
	--------------  VS    -------------
	A: 公共控件
		a: Button 按钮 b: CheckBox	复选框 c: CheckedListBox 复选框列表 d: ComboBox	下拉列表 e: DateTimePicker 日期时间 f: Label 标签 g: LinkLabel 超链接标签 h: ListBox 选择项列表 i: ListView	项的集合 j: MaskedTextBox 使用掩码的输入框 k: MonthCalendar 日历 l: NotifyIcon 在windows通知区域显示图标 m: NumbericUpDown 可↑↓控制加减的数字输入框 n: PictureBox 图像域 o: ProgressBar 进度条 p: RadioButton 单选按钮 q: RichTextBox 文本域 r: TextBox 输入框 s: ToolTip 显示信息,鼠标移至关联组件时显示信息 t: TreeView 显示可选择包含图像的标签项的分层集合 u: WebBrowser 允许在窗体内可以浏览网页
	B: 容器
		a: FlowLayoutPanel b: GroupBox c: Panel d: SplitContainer e: TabControl f: TableLayoutPanel
	C: 菜单和工具栏
		a: ContextMenuStrip 右键菜单 b: MenuStrip 工具栏. c: StatusStrip 工具栏.支持图像下拉项,标签等 d: ToolStrip 工具栏.支持图像按钮,图像下拉项,输入框,标签等 e: ToolStripContainer 边框四面都支持工具栏的窗体容器
	D: 数据
		a: Chart 图表 b: BindingNavigator	提供用于导航和处理绑定到窗体控件的数据的用户界面 c: BindingSource 封装窗体的数据源,并提供导航,筛选,排序和更新功能 d: DataGridView 显示网格中可以自定义的数据的行和列 e: DataSet 表示数据在内存中的缓存
	G: VB PowerPacks
		a: PrintForm 将Windows表单打印为简单报表 b: LineShape 水平线,垂直线或对角线 c: OvalShape 椭圆 d: RectangleShape 矩形 e: DataRepeater 按可自定义的列表格式显示数据
	
八: VB常用内部函数
	A: 类型转换函数
		1: Cbool(string)		转换为布尔值(Boolean)
		2: Cbyte(string)		转换为字节类型的值(Byte)
		3: Ccur(string)			转换为货币类值 (Currency)
		4: Cdate(string)		转换为日前类型的值 (Date)
		5: Cdbl(string)			转换为双精度值 (Double)
		6: Cint(string)			转换为整数值 (Integer)
		7: Clng(string)			转换为长整型的值 (Long)
		8: Csng(string)			转换为单精度的值 (Single)
		9: Cstr(var)			转换为字符串值 (String)
		10: Str(var)			数值转换为字符串(Variant)
		11: Val(string)			字符串转换为数值 
		12: CVErr(string)		转换为Error值
	B: 类型判断函数
		1: IsArray(var)			判断一个变量是否是数组 
		2: IsDate(var)			判断一个变量是否是日期 
		3: IsNull(var)			判断一个变量是否为空 
		4: IsNumeric(exp)		判断表达式是否包含数值 
		5: IsObject(var)		判断一个变量是否是对象 
		6: TypeName(var)		返回变量的数据类型 
	C: 常用数学函数
			在三角函数中,以弧度表示
		1: Abs(num) 			取绝对值
		2: Cos(num) 			余弦函数
		3: Exp(num) 			e为底的指数函数
		4: Log(num) 			以e为底的自然对数
		5: Rnd					产生(0,1)的随机数
		   Randomize			随机数种子.不执行该语句,则多次调用Rnd,不会产生不同的随机数	
		6: Sin(num) 			正弦函数
		7: Sgn(num) 			符号函数，取正负号：X>0 则结果为1；X=0 则结果为0；X<0 则结果为-1
		8: Sqr(num) 			平方根
		9: Tan(num) 			正切函数
		10: Atn(num)	 		反切函数
		11: Int(num)			向下取整
		12: Fix(num)			向下取整
		13: Formatpercent(num)	返回百分比 
		14: Hex(num)			返回num的16进制数 
		15: Oct(num)			返回num的8进制数
		16: Round(num[,n])		按小数位四舍五入.n: 小数位(默认值: 0)
			//进制转换
			Oct(num)			//十进制转八进制
			oct("&H"&num)		//十六进制转八进制
			Hex(num)			//十进制转十六进制
			Hex("&O"&num)		//八进制转十六进制
			CLng("&H"&Str(num))	//十六进制转换为十进制
		
	D: 字符串类函数
		1: Format(exp [,str])				使数值,日期,字符串按指定格式输出,一般用于Print方法中
				格式化数值: '#'(任意位上的数,没有位则没有数)  '0'(任意位上的数,没有位则为0)  '.'(小数点)  '%'(百分制)  'E+'(科学计数法)
					eg: "###,##0.00"  "0.00E+#0"  "###,###,##0.00%"  "000,000.00"
		1: StrComp(string1,string2)			比较两个字符串 
		2: Asc(string)						返回字符串第一个字符的ASCII码
		3: Chr(charcode)					返回ASCII码为charcode的字符
		4: Len(string)						计算字符串X的长度
		5: InStr([n,]string,searchstr)		从第n个字符开始寻找字符串searchstr在string中的索引
		6: InstrRev([n,]string,searchstr)	同上,从右边开始搜索  
		7: Ucase(string),Lcase(string)		转换大小写
		8: Left(string,num)					从左侧开始截取num个字符返回
		9: Right(string,num)				从右侧开始截取num个字符返回
		10: Trim(string)					去除两端空格(Ltrim()+Rtrim())
		11: Mid(string,start[,len])			截取从start开始的len个字符
		12: Replace(string,find,withstr)	用字符串withstr替换find并返回
		13: StrReverse(string)				反转字符串
		14: Split(str)						以str为分割符,将字符串分割为字符串数组
		15: Space(num)						返回num个空格		 
	E: 日期时间类函数
			若date里只有时间,没有日期,则日期视为#1899/12/30#
		1: Year(date)					返回年
		2: Month(date)					返回月
		3: Day(date)					返回日
		4: Hour(date)					返回时
		5: Minute(date)					返回分
		6: Second(date)					返回秒
		7: Date()						返回系统日期
		8: Time()						返回系统时间
		9: Now()						返回系统日期时间
		10: Weekday(date)				返回星期几
		11: WeekdayName(date)			返回星期几的名称
		12: DateAdd(type,num,date)		返回增加指定时间间隔的日期.type: 间隔类型,取值: yyyy-年,m-月,d-日,h-小时,n-分
		13: DateDiff(type,date1,date2)	返回两个时间的间隔.type: 间隔类型
		14: Datevalue(date)				返回date中的日期部份 
		15: DateSerial(Y,M,D)			合并年,月,日成为日期
		16: TimeSerial(H,M,S)			合并时,分,秒成为时间
		17: FormatDatetime(date)		返回格式化为日期的表达式 
		18: MonthName(X)				返回X(1-12)月的月份名称
	F: 杂项
		1: Shell(string[,type])			将string在DOS命令执行.type: 窗口类型
		2: Array(list)					返回数组,只能为一个变体变量或变体动态数组赋值
				eg: Dim a As Variant = Array(1,2,3,5,2,3,5,67)
		3: CreateObject(class)			创建一个对象 
		4: GetObject(pathfilename)		得到文件对象 
		5: Inputbox(prompt)				提供一个可供输入数据的对话框 
		6: LBound(arrayP)				返回数组的最小索引 
		7: Msgbox(string)				输出一个消息框 
		8: Ubound(array)				返回数组的最大索引
	G: 窗体方法
		a: Print		在对象上输出文本内容 /* 窗体,图形框,打印机 */
				[object.]Print [Spc(n)|Tab(n)] [exp [,|;]  [exp [,|;] ...]]
 			1: object: 对象,可以是窗体,图形框或打印机.若省略了对象,则为当前窗体
			2: Spc(n): 用于输出时插入n个空格
			3: Tab(n): 在输出表达式列表时移动n个制表符
			4: exp: 表达式列表,要输出的内容,该方法会自动换行
			5: ";" : 按紧凑格式输出,Print方法将不会换行
			6: "," : 光标定位在下一个打印区的开始位置(每个14列为一个打印区)
		b: Cls			清除运行时在窗体或图形对象中显示的文本(不能清除设计时的) /* 窗体,图形框 */
				[object.]Cls
			object: 对象,可以是窗体或图形框.若省略了对象,则为当前窗体
		c: Move			用于移动窗体或控件,并可改变其大小	/* 除[时钟,菜单]外的所有控件 */
				[object.]Move left [,top [,width [,height]]]
			1: object: 对象,除时钟,菜单外的所有控件.省略时为当前窗体
			2: left: 距屏幕或窗体左边距离,数值表达式,单位: Twip(下同)
			3: top: 距屏幕或窗体上边距离
			4: width: 宽度
			5: height: 高度
	H: 交互函数
		a: InputBox		对话框,等待用户输入或单击按钮,函数返回文本框中的输入数据
				InputBox [$] (prompt [, title] [,default] [, x] [, y])
			1: prompt: 给予用户的提示
			2: title: 对话框的标题
			3: default: 输入框中默认文本
			4: x,y: 对话框的x,y坐标
		b: MsgBox		信息框,等待用户单击一个按钮,返回用户所选按钮的数值
				MsgBox( prompt [,button] [, title] )
			1: prompt: 给予用户的提示
			2: button: 整形表达式或表达式的和,指定显示"按钮"的数目及形式,使用的图标样式。默认值为0
			3: title: 对话框的标题
		c: MsgBox 过程	
			跟MsgBox()函数功能相同,用法类似
				MsgBox prompt [,button] [, title]
	I: 关于窗体的方法
		a: Load  窗体名称
		b: UnLoad  窗体名称
		c: [窗体名称].Show [模式]
		d: [窗体名称].Hide













































